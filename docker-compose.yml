version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: instagram-analytics-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=sqlite:///instagram_analytics.db
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your_openai_api_key_here}
    volumes:
      - ./backend/instagram_analytics.db:/app/instagram_analytics.db
      - ./backend/uploads:/app/uploads
    networks:
      - instagram-analytics-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: instagram-analytics-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    depends_on:
      - backend
    networks:
      - instagram-analytics-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add PostgreSQL if you want to use it instead of SQLite
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: instagram-analytics-db
  #   environment:
  #     POSTGRES_DB: instagram_analytics
  #     POSTGRES_USER: ${POSTGRES_USER:-postgres}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - instagram-analytics-network
  #   restart: unless-stopped

networks:
  instagram-analytics-network:
    driver: bridge

volumes:
  # postgres_data:  # Uncomment if using PostgreSQL
  uploads_data:
    driver: local
